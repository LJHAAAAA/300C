//一个两位正整数,将其个位和十位对调,得到另一个两位正整数,就是对调数。  现可以随机输入一个对调数,找到另一个对调后不同的两位正整数,使得这两个正整数之和等于对调后
各自的对调数之和。   如：63+47=36+74.

#include<stdio.h>

int main(){
  int x,y,z,x1,y1,z1,i,k,n,j=0;
  while(1){
    printf("please input an integer:\n");
    scanf("%d",&n);
    if(n<=10||n>=100){
      printf("data error");
      continue;                 //跳出本次小循环,继续执行下次循环
    }
    else{
      if(n%10==0){                 //必须保证个位和十位都不能为0
        printf("data error");
        continue;
      }
      else{
        x=n/10;                   
        y=n%10;
        z=y*10+x;
        break;
      }
    }
    
    for(i=11;i<100;i++){       //第二个对调数
      if(i%10==0){
        continue;
      }
      else{
        x1=i/10;
        y1=i&10;
        z1=y1*10+x1;
        if(n+i==z+z1&&n!=z1){          //如果有满足的输出,否则跳出小循环继续执行
          printf("%d+%d=%d+%d\n",n,i,z,z1);
          j++;
        }
        else{
          continue;
        }
      }
      if(j==0){
        printf("do not exist!");
      }
    }
  }
}
